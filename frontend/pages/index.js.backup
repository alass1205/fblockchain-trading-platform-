import { useState, useEffect } from 'react';
import { ethers } from 'ethers';
import Link from 'next/link';

export default function Home() {
    const [account, setAccount] = useState('');
    const [isConnected, setIsConnected] = useState(false);
    const [userRegistered, setUserRegistered] = useState(false);
    const [showRegistration, setShowRegistration] = useState(false);
    const [formData, setFormData] = useState({
        legalName: '',
        passportFile: null
    });

    // V√©rifier si MetaMask est connect√©
    useEffect(() => {
        checkWalletConnection();
    }, []);

    async function checkWalletConnection() {
        if (typeof window.ethereum !== 'undefined') {
            try {
                const accounts = await window.ethereum.request({ method: 'eth_accounts' });
                if (accounts.length > 0) {
                    setAccount(accounts[0]);
                    setIsConnected(true);
                    checkUserRegistration(accounts[0]);
                }
            } catch (error) {
                console.error('Erreur lors de la v√©rification du wallet:', error);
            }
        }
    }

    async function connectWallet() {
        if (typeof window.ethereum !== 'undefined') {
            try {
                const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
                setAccount(accounts[0]);
                setIsConnected(true);
                checkUserRegistration(accounts[0]);
            } catch (error) {
                console.error('Erreur lors de la connexion:', error);
                alert('Erreur lors de la connexion au wallet');
            }
        } else {
            alert('MetaMask n\'est pas install√©!');
        }
    }

    async function checkUserRegistration(address) {
        try {
            const response = await fetch(`http://localhost:3001/api/user/${address}`);
            const userData = await response.json();
            
            if (userData.legal_name) {
                setUserRegistered(true);
            } else {
                setShowRegistration(true);
            }
        } catch (error) {
            console.error('Erreur lors de la v√©rification utilisateur:', error);
            setShowRegistration(true);
        }
    }

    async function handleRegistration(e) {
        e.preventDefault();
        
        const formDataToSend = new FormData();
        formDataToSend.append('walletAddress', account);
        formDataToSend.append('legalName', formData.legalName);
        if (formData.passportFile) {
            formDataToSend.append('passport', formData.passportFile);
        }

        try {
            const response = await fetch('http://localhost:3001/api/register', {
                method: 'POST',
                body: formDataToSend
            });

            const result = await response.json();
            
            if (result.success) {
                setUserRegistered(true);
                setShowRegistration(false);
                alert('Inscription r√©ussie!');
            } else {
                alert('Erreur lors de l\'inscription');
            }
        } catch (error) {
            console.error('Erreur lors de l\'inscription:', error);
            alert('Erreur lors de l\'inscription');
        }
    }

    return (
        <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>
            <header style={{ borderBottom: '1px solid #ccc', paddingBottom: '20px', marginBottom: '30px' }}>
                <h1 style={{ color: '#333' }}>üèõÔ∏è Blockchain Trading Platform</h1>
                <p style={{ color: '#666' }}>Plateforme de trading d'instruments financiers sur blockchain</p>
            </header>

            <main>
                {!isConnected ? (
                    <div style={{ textAlign: 'center', padding: '40px' }}>
                        <h2>Bienvenue sur la plateforme de trading</h2>
                        <p>Connectez votre wallet MetaMask pour commencer</p>
                        <button 
                            onClick={connectWallet}
                            style={{
                                padding: '15px 30px',
                                fontSize: '18px',
                                backgroundColor: '#007bff',
                                color: 'white',
                                border: 'none',
                                borderRadius: '5px',
                                cursor: 'pointer',
                                marginTop: '20px'
                            }}
                        >
                            Connecter MetaMask
                        </button>
                    </div>
                ) : showRegistration ? (
                    <div style={{ maxWidth: '500px', margin: '0 auto' }}>
                        <h2>Inscription requise</h2>
                        <p>Veuillez fournir vos informations pour utiliser la plateforme</p>
                        
                        <form onSubmit={handleRegistration}>
                            <div style={{ marginBottom: '20px' }}>
                                <label>Nom l√©gal :</label>
                                <input
                                    type="text"
                                    value={formData.legalName}
                                    onChange={(e) => setFormData({...formData, legalName: e.target.value})}
                                    required
                                    style={{ 
                                        width: '100%', 
                                        padding: '10px', 
                                        marginTop: '5px',
                                        border: '1px solid #ccc',
                                        borderRadius: '4px'
                                    }}
                                />
                            </div>
                            
                            <div style={{ marginBottom: '20px' }}>
                                <label>Photo de passeport :</label>
                                <input
                                    type="file"
                                    accept="image/*"
                                    onChange={(e) => setFormData({...formData, passportFile: e.target.files[0]})}
                                    style={{ 
                                        width: '100%', 
                                        padding: '10px', 
                                        marginTop: '5px',
                                        border: '1px solid #ccc',
                                        borderRadius: '4px'
                                    }}
                                />
                            </div>
                            
                            <button 
                                type="submit"
                                style={{
                                    padding: '10px 20px',
                                    backgroundColor: '#28a745',
                                    color: 'white',
                                    border: 'none',
                                    borderRadius: '4px',
                                    cursor: 'pointer'
                                }}
                            >
                                S'inscrire
                            </button>
                        </form>
                    </div>
                ) : (
                    <div>
                        <div style={{ 
                            backgroundColor: '#d4edda', 
                            padding: '15px', 
                            borderRadius: '5px',
                            marginBottom: '30px'
                        }}>
                            <p>‚úÖ Wallet connect√©: {account.slice(0, 6)}...{account.slice(-4)}</p>
                        </div>

                        <h2>Navigation</h2>
                        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '20px' }}>
                            <Link href="/portfolio" style={{ textDecoration: 'none' }}>
                                <div style={{ 
                                    border: '1px solid #ddd', 
                                    padding: '20px', 
                                    borderRadius: '8px',
                                    backgroundColor: '#f8f9fa',
                                    cursor: 'pointer'
                                }}>
                                    <h3>üìä Portfolio</h3>
                                    <p>Consultez vos actifs et effectuez des retraits</p>
                                </div>
                            </Link>

                            <Link href="/assets/CLV" style={{ textDecoration: 'none' }}>
                                <div style={{ 
                                    border: '1px solid #ddd', 
                                    padding: '20px', 
                                    borderRadius: '8px',
                                    backgroundColor: '#f8f9fa',
                                    cursor: 'pointer'
                                }}>
                                    <h3>üè¢ Actions CLV</h3>
                                    <p>Tradez les actions Clove Company</p>
                                </div>
                            </Link>

                            <Link href="/assets/ROO" style={{ textDecoration: 'none' }}>
                                <div style={{ 
                                    border: '1px solid #ddd', 
                                    padding: '20px', 
                                    borderRadius: '8px',
                                    backgroundColor: '#f8f9fa',
                                    cursor: 'pointer'
                                }}>
                                    <h3>üåø Actions ROO</h3>
                                    <p>Tradez les actions Rooibos Limited</p>
                                </div>
                            </Link>

                            <Link href="/assets/GOV" style={{ textDecoration: 'none' }}>
                                <div style={{ 
                                    border: '1px solid #ddd', 
                                    padding: '20px', 
                                    borderRadius: '8px',
                                    backgroundColor: '#f8f9fa',
                                    cursor: 'pointer'
                                }}>
                                    <h3>üèõÔ∏è Obligations GOV</h3>
                                    <p>Tradez les obligations gouvernementales</p>
                                </div>
                            </Link>

                            <Link href="/faq" style={{ textDecoration: 'none' }}>
                                <div style={{ 
                                    border: '1px solid #ddd', 
                                    padding: '20px', 
                                    borderRadius: '8px',
                                    backgroundColor: '#f8f9fa',
                                    cursor: 'pointer'
                                }}>
                                    <h3>‚ùì FAQ</h3>
                                    <p>Comment utiliser la plateforme</p>
                                </div>
                            </Link>
                        </div>
                    </div>
                )}
            </main>
        </div>
    );
}
