import Link from 'next/link';
import { useState, useEffect } from 'react';

export default function Portfolio() {
    const [account, setAccount] = useState('');
    const [balances, setBalances] = useState({
        TRG: '0', CLV: '0', ROO: '0', GOV: '0'
    });
    const [vaultBalances, setVaultBalances] = useState({
        TRG: '0', CLV: '0', ROO: '0'
    });
    const [myOrders, setMyOrders] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');

    useEffect(() => {
        checkWallet();
    }, []);

    async function checkWallet() {
        if (typeof window.ethereum !== 'undefined') {
            const accounts = await window.ethereum.request({ method: 'eth_accounts' });
            if (accounts.length > 0) {
                setAccount(accounts[0]);
                await loadAllData(accounts[0]);
            }
        }
        setLoading(false);
    }

    async function loadAllData(userAddress) {
        try {
            setError('');
            
            // Charger balances wallet
            const balanceResponse = await fetch(`http://localhost:3001/api/balances/${userAddress}`);
            const balanceData = await balanceResponse.json();
            if (balanceData.success) {
                setBalances(balanceData.balances);
            }
            
            // Charger balances vault
            const vaultResponse = await fetch(`http://localhost:3001/api/vault-balances/${userAddress}`);
            const vaultData = await vaultResponse.json();
            if (vaultData.success) {
                setVaultBalances(vaultData.vaultBalances);
            }
            
            // Charger mes ordres
            const ordersResponse = await fetch(`http://localhost:3001/api/my-orders/${userAddress}`);
            const ordersData = await ordersResponse.json();
            if (ordersData.success) {
                setMyOrders(ordersData.orders);
            }
            
        } catch (error) {
            console.error('Erreur chargement:', error);
            setError('Erreur lors du chargement: ' + error.message);
        }
    }

    async function cancelOrder(orderId, orderType, asset, quantity, price) {
        if (!confirm(`√ätes-vous s√ªr de vouloir annuler cet ordre ${orderType} ?`)) return;
        
        try {
            const response = await fetch(`http://localhost:3001/api/cancel-order/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userAddress: account })
            });
            
            const result = await response.json();
            
            if (result.success) {
                alert(`‚úÖ Ordre annul√© !\n${result.refundDetails.amount} rembours√©s`);
                await loadAllData(account); // Recharger les donn√©es
            } else {
                alert('‚ùå Erreur: ' + result.error);
            }
        } catch (error) {
            console.error('Erreur annulation:', error);
            alert('‚ùå Erreur lors de l\'annulation');
        }
    }

    // Calcul des valeurs
    const prices = { TRG: 1, CLV: 10, ROO: 10, GOV: 200 };
    const walletValue = balances ? Object.entries(balances).reduce((total, [symbol, balance]) => {
        return total + (parseFloat(balance || 0) * (prices[symbol] || 0));
    }, 0) : 0;
    
    const vaultValue = vaultBalances ? Object.entries(vaultBalances).reduce((total, [symbol, balance]) => {
        return total + (parseFloat(balance || 0) * (prices[symbol] || 0));
    }, 0) : 0;
    
    const totalValue = walletValue + vaultValue;

    if (!account) {
        return (
            <div style={{ padding: '20px' }}>
                <h2>‚ö†Ô∏è Wallet non connect√©</h2>
                <p>Veuillez connecter votre wallet pour voir votre portfolio.</p>
                <Link href="/" style={{ color: '#007bff' }}>‚Üê Retour √† l'accueil</Link>
            </div>
        );
    }

    return (
        <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>
            <header style={{ borderBottom: '2px solid #007bff', paddingBottom: '20px', marginBottom: '30px' }}>
                <h1>üìä Portfolio Complet (Audit)</h1>
                <p><strong>Wallet:</strong> {account}</p>
                <Link href="/" style={{ color: '#007bff', textDecoration: 'none' }}>‚Üê Retour √† l'accueil</Link>
            </header>

            {loading && (
                <div style={{ textAlign: 'center', padding: '40px' }}>
                    <p>‚è≥ Chargement des donn√©es...</p>
                </div>
            )}

            {error && (
                <div style={{ 
                    backgroundColor: '#f8d7da', 
                    padding: '15px', 
                    borderRadius: '5px',
                    marginBottom: '20px',
                    border: '1px solid #f5c6cb'
                }}>
                    <strong>‚ùå Erreur:</strong> {error}
                </div>
            )}

            {!loading && !error && (
                <>
                    {/* R√©sum√© financier */}
                    <div style={{ 
                        display: 'grid', 
                        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', 
                        gap: '20px',
                        marginBottom: '30px'
                    }}>
                        <div style={{ 
                            backgroundColor: '#d4edda', 
                            padding: '20px', 
                            borderRadius: '8px',
                            border: '1px solid #c3e6cb'
                        }}>
                            <h3 style={{ margin: '0 0 10px 0', color: '#155724' }}>üí∞ Wallet</h3>
                            <p style={{ margin: 0, fontSize: '18px', fontWeight: 'bold' }}>
                                {walletValue.toFixed(2)} TRG
                            </p>
                        </div>
                        
                        <div style={{ 
                            backgroundColor: '#fff3cd', 
                            padding: '20px', 
                            borderRadius: '8px',
                            border: '1px solid #ffeaa7'
                        }}>
                            <h3 style={{ margin: '0 0 10px 0', color: '#856404' }}>üè¶ Vault (Escrow)</h3>
                            <p style={{ margin: 0, fontSize: '18px', fontWeight: 'bold' }}>
                                {vaultValue.toFixed(2)} TRG
                            </p>
                        </div>
                        
                        <div style={{ 
                            backgroundColor: '#d1ecf1', 
                            padding: '20px', 
                            borderRadius: '8px',
                            border: '1px solid #bee5eb'
                        }}>
                            <h3 style={{ margin: '0 0 10px 0', color: '#0c5460' }}>üíé Total</h3>
                            <p style={{ margin: 0, fontSize: '18px', fontWeight: 'bold' }}>
                                {totalValue.toFixed(2)} TRG
                            </p>
                        </div>
                    </div>

                    {/* Tableau des actifs */}
                    <div style={{ marginBottom: '30px' }}>
                        <h3>üìã Vos actifs d√©taill√©s</h3>
                        <table style={{ 
                            width: '100%', 
                            borderCollapse: 'collapse', 
                            border: '2px solid #007bff',
                            backgroundColor: '#fff'
                        }}>
                            <thead>
                                <tr style={{ backgroundColor: '#007bff', color: 'white' }}>
                                    <th style={{ padding: '12px', border: '1px solid #0056b3' }}>Actif</th>
                                    <th style={{ padding: '12px', border: '1px solid #0056b3' }}>üí∞ Wallet</th>
                                    <th style={{ padding: '12px', border: '1px solid #0056b3' }}>üè¶ Vault (Escrow)</th>
                                    <th style={{ padding: '12px', border: '1px solid #0056b3' }}>üíé Total</th>
                                    <th style={{ padding: '12px', border: '1px solid #0056b3' }}>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                {['TRG', 'CLV', 'ROO'].map(symbol => {
                                    const walletBal = parseFloat(balances[symbol] || '0');
                                    const vaultBal = parseFloat(vaultBalances[symbol] || '0');
                                    const total = walletBal + vaultBal;
                                    const hasAssets = total > 0;
                                    
                                    return (
                                        <tr key={symbol} style={{ 
                                            backgroundColor: hasAssets ? '#f8f9fa' : '#ffffff'
                                        }}>
                                            <td style={{ padding: '12px', border: '1px solid #dee2e6', fontWeight: 'bold' }}>
                                                <Link href={`/assets/${symbol}`} style={{ 
                                                    color: '#007bff', 
                                                    textDecoration: 'none',
                                                    fontSize: '16px'
                                                }}>
                                                    {symbol} {symbol === 'TRG' && 'üü°'} {symbol === 'CLV' && 'üè¢'} {symbol === 'ROO' && 'üåø'}
                                                </Link>
                                            </td>
                                            <td style={{ 
                                                padding: '12px', 
                                                border: '1px solid #dee2e6',
                                                fontWeight: walletBal > 0 ? 'bold' : 'normal'
                                            }}>
                                                {balances[symbol]}
                                            </td>
                                            <td style={{ 
                                                padding: '12px', 
                                                border: '1px solid #dee2e6',
                                                fontWeight: vaultBal > 0 ? 'bold' : 'normal',
                                                backgroundColor: vaultBal > 0 ? '#fff3cd' : 'transparent'
                                            }}>
                                                {vaultBalances[symbol]}
                                                {vaultBal > 0 && <span style={{ color: '#856404' }}> (bloqu√©)</span>}
                                            </td>
                                            <td style={{ 
                                                padding: '12px', 
                                                border: '1px solid #dee2e6',
                                                fontWeight: 'bold'
                                            }}>
                                                {total.toFixed(1)}
                                            </td>
                                            <td style={{ padding: '12px', border: '1px solid #dee2e6' }}>
                                                <Link href={`/assets/${symbol}`}>
                                                    <button style={{
                                                        padding: '6px 12px',
                                                        backgroundColor: '#007bff',
                                                        color: 'white',
                                                        border: 'none',
                                                        borderRadius: '4px',
                                                        cursor: 'pointer',
                                                        fontSize: '12px'
                                                    }}>
                                                        üìà Trader
                                                    </button>
                                                </Link>
                                            </td>
                                        </tr>
                                    );
                                })}
                                
                                {/* Ligne GOV (obligations) */}
                                <tr>
                                    <td style={{ padding: '12px', border: '1px solid #dee2e6', fontWeight: 'bold' }}>
                                        <Link href="/assets/GOV" style={{ color: '#007bff', textDecoration: 'none' }}>
                                            GOV üèõÔ∏è
                                        </Link>
                                    </td>
                                    <td style={{ padding: '12px', border: '1px solid #dee2e6' }}>{balances.GOV}</td>
                                    <td style={{ padding: '12px', border: '1px solid #dee2e6' }}>-</td>
                                    <td style={{ padding: '12px', border: '1px solid #dee2e6', fontWeight: 'bold' }}>{balances.GOV}</td>
                                    <td style={{ padding: '12px', border: '1px solid #dee2e6' }}>
                                        <Link href="/assets/GOV">
                                            <button style={{
                                                padding: '6px 12px',
                                                backgroundColor: '#007bff',
                                                color: 'white',
                                                border: 'none',
                                                borderRadius: '4px',
                                                cursor: 'pointer',
                                                fontSize: '12px'
                                            }}>
                                                üìà Trader
                                            </button>
                                        </Link>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    {/* Mes ordres avec possibilit√© d'annulation */}
                    <div style={{ marginBottom: '30px' }}>
                        <h3>üìã Mes ordres (avec annulation)</h3>
                        {myOrders.length === 0 ? (
                            <p style={{ 
                                backgroundColor: '#f8f9fa', 
                                padding: '20px', 
                                borderRadius: '5px',
                                textAlign: 'center'
                            }}>
                                Aucun ordre en cours
                            </p>
                        ) : (
                            <table style={{ 
                                width: '100%', 
                                borderCollapse: 'collapse', 
                                border: '1px solid #ddd'
                            }}>
                                <thead>
                                    <tr style={{ backgroundColor: '#f8f9fa' }}>
                                        <th style={{ padding: '10px', border: '1px solid #ddd' }}>ID</th>
                                        <th style={{ padding: '10px', border: '1px solid #ddd' }}>Actif</th>
                                        <th style={{ padding: '10px', border: '1px solid #ddd' }}>Type</th>
                                        <th style={{ padding: '10px', border: '1px solid #ddd' }}>Quantit√©</th>
                                        <th style={{ padding: '10px', border: '1px solid #ddd' }}>Prix</th>
                                        <th style={{ padding: '10px', border: '1px solid #ddd' }}>Statut</th>
                                        <th style={{ padding: '10px', border: '1px solid #ddd' }}>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {myOrders.map(order => (
                                        <tr key={order.id} style={{
                                            backgroundColor: order.status === 'pending' ? '#fff3cd' : 
                                                            order.status === 'filled' ? '#d4edda' : '#f8d7da'
                                        }}>
                                            <td style={{ padding: '8px', border: '1px solid #ddd' }}>{order.id}</td>
                                            <td style={{ padding: '8px', border: '1px solid #ddd' }}>{order.asset_symbol}</td>
                                            <td style={{ padding: '8px', border: '1px solid #ddd' }}>
                                                {order.order_type === 'buy' ? 'üí∞ Achat' : 'üí∏ Vente'}
                                            </td>
                                            <td style={{ padding: '8px', border: '1px solid #ddd' }}>{order.quantity}</td>
                                            <td style={{ padding: '8px', border: '1px solid #ddd' }}>{order.price} TRG</td>
                                            <td style={{ padding: '8px', border: '1px solid #ddd' }}>
                                                {order.status === 'pending' && '‚è≥ En attente'}
                                                {order.status === 'filled' && '‚úÖ Ex√©cut√©'}
                                                {order.status === 'cancelled' && '‚ùå Annul√©'}
                                            </td>
                                            <td style={{ padding: '8px', border: '1px solid #ddd' }}>
                                                {order.status === 'pending' && (
                                                    <button
                                                        onClick={() => cancelOrder(order.id, order.order_type, order.asset_symbol, order.quantity, order.price)}
                                                        style={{
                                                            padding: '4px 8px',
                                                            backgroundColor: '#dc3545',
                                                            color: 'white',
                                                            border: 'none',
                                                            borderRadius: '3px',
                                                            cursor: 'pointer',
                                                            fontSize: '11px'
                                                        }}
                                                    >
                                                        ‚ùå Annuler
                                                    </button>
                                                )}
                                            </td>
                                        </tr>
                                    ))}
                                </tbody>
                            </table>
                        )}
                    </div>

                    {/* Explications pour l'audit */}
                    <div style={{ 
                        backgroundColor: '#d1ecf1', 
                        padding: '20px', 
                        borderRadius: '8px',
                        marginTop: '30px'
                    }}>
                        <h4>üéØ Explications pour l'audit</h4>
                        <ul style={{ margin: '10px 0' }}>
                            <li><strong>Wallet</strong> : Actifs libres dans votre wallet personnel</li>
                            <li><strong>Vault (Escrow)</strong> : Actifs bloqu√©s pour ordres en attente - s√©curis√©s et r√©cup√©rables</li>
                            <li><strong>Ordres pending</strong> : Peuvent √™tre annul√©s pour lib√©rer les fonds du vault</li>
                            <li><strong>S√©curit√©</strong> : Impossible de cr√©er des tokens de nulle part</li>
                            <li><strong>Transparence</strong> : Toutes les balances sont v√©rifiables sur la blockchain</li>
                        </ul>
                    </div>
                </>
            )}
        </div>
    );
}
